const { GoogleSpreadsheet } = require('google-spreadsheet');
import { JWT } from 'google-auth-library';

export default async function handler(req, res) {
  try {
    const { age, nationality, gender, name } = req.body;

    // Config variables
    const SPREADSHEET_ID = process.env.REACT_APP_SPREADSHEET_ID;
    const CLIENT_EMAIL = process.env.REACT_APP_GOOGLE_CLIENT_EMAIL;
    const PRIVATE_KEY = process.env.REACT_APP_GOOGLE_SERVICE_PRIVATE_KEY;
    if (!SPREADSHEET_ID || !CLIENT_EMAIL || !PRIVATE_KEY) {
      throw new Error("Missing required environment variables.");
    }
    const newRow = { Age: age, Nationality: nationality, Gender: gender, Name: name };
    await appendSpreadsheet(newRow);
    res.status(200).json({ success: true });
  } catch (error) {
    res.status(500).json({ error: 'Internal Server Error' });
  }
}

const appendSpreadsheet = async (row) => {
  try {
const serviceAccountAuth = new JWT({
// env var values here are copied from service account credentials generated by google
// see "Authentication" section in docs for more info
email: process.env.REACT_APP_GOOGLE_CLIENT_EMAIL,
key: process.env.REACT_APP_GOOGLE_SERVICE_PRIVATE_KEY.trim().replace(/\\n/g, '\n'),
scopes: [
  'https://www.googleapis.com/auth/spreadsheets',
],
});

const doc = new GoogleSpreadsheet(process.env.REACT_APP_SPREADSHEET_ID, serviceAccountAuth);
await doc.loadInfo(); // loads document properties and worksheets
const sheet = doc.sheetsByIndex[0]; // or use `doc.sheetsById[id]` or `doc.sheetsByTitle[title]`
const result =  await sheet.addRow(row);
  } catch (e) {
    console.error('Error: ', e);
  }
};